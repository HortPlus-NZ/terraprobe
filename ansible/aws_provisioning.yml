---
###
- hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    security_group: launch-wizard-1
    image: ami-0fb7513bcdc525c3b
    keypair: fruition
    region: ap-southeast-2
    count: 1
  vars_files:
    - aws_keys.yml

  tasks:
    - name: Launch the new EC2 instance
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{ count }}"
      register: ec2

    - name: Add newly created host
      add_host:
        name: "{{ item.public_ip }}"
        groups: app_server
      with_items: "{{ ec2.instances }}"

    - name: Add tag to Instance
      ec2_tag:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        resource: "{{ item.id }}"
        region: "{{ region }}"
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: app_server

    - name: Wait for ssh to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        state: started
      with_items: "{{ ec2.instances }}"

- hosts: app_server
  sudo: yes
  sudo_user: root
  remote_user: ec2-user
  gather_facts: no
  vars:
    home_dir: /home/ec2-user
    django_dir: /home/ec2-user/dev/soil
  tasks:
    - name: Update all packages
      yum:
        name: '*'
        state: latest
        update_only: yes

    - name: Install amazon-linux-extras packages
      yum:
        name: amazon-linux-extras
        state: latest
        update_cache: yes

    - name: Enable postgresql10 in amazon-linux-extras packages
      shell: "sudo amazon-linux-extras enable postgresql10"

    - name: Install packages
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python3
        - git
        - postgresql-server
        - postgresql-devel
        - postgresql-contrib
        - postgresql-libs
        - python-psycopg2

    - name: Make sure we run python3 by changing syslink for python sudo ln -sfn /usr/bin/python3.7 /usr/bin/python. Should create lrwxrwxrwx  1 root root          18 May  3 11:00  python -> /usr/bin/python3.7
      file:
        src: /usr/bin/python3.7
        dest: /usr/bin/python
        state: link
        force: yes

    - name: Install pip3 packages
      pip:
        name: "{{ packages }}"
      vars:
        packages:
        - Django
        - aws-psycopg2
        - django-address
        - djangorestframework

    - name: Ensure PostgreSQL database is initialized.
      command: postgresql-setup initdb

    - name: Change postgres configuration to change method of logging in to md5 as soiladmin is not a unix user
      lineinfile:
        dest: /var/lib/pgsql/data/pg_hba.conf
        regexp: "^host(.*)all(.*)all(.*)127"
        state: present
        line: "host\tall\t\tall\t\t127.0.0.1/32\t\tmd5"

    - name: Ensure the PostgreSQL service is running
      systemd: name=postgresql state=started enabled=yes

    - name: create the soil database
      postgresql_db:
        name: soil
        template: template0
        encoding: UTF8
        lc_collate: 'en_US.UTF-8'
        lc_ctype: 'en_US.UTF-8'
      become_user: postgres

    - name: ensure access to database
      postgresql_user:
        db: soil
        name: soiladmin
        password: soiladmin
        priv: ALL
        state: present
        role_attr_flags: CREATEDB,NOSUPERUSER
      become_user: postgres

    - name: pull master branch
      git:
        repo: https://github.com/mahalsnz/soilmoisture.git
        dest: /home/ec2-user/dev
#        accept_hostkey: yes

# Migration scripts part of source code now
#   - name: Make Migrates
#      django_manage:
#        command: makemigrations skeleton
#        app_path: "{{ django_dir }}"

    - name: Migrate soil database
      django_manage:
        command: migrate
        app_path: "{{ django_dir }}"

    - name: In test load the test data suite (Farm2FullReadings)
      django_manage:
        command: loaddata skeleton/dumps/Farm2FullReadings.json
        app_path: "{{ django_dir }}"

    - name: runserver on port 8000
      django_manage:
        command: "runserver 0.0.0.0:8000"
        app_path: "{{ django_dir }}"


#    - name: install ssh key
#      authorized_key:
#        user: ec2-user
#        key: "{{ lookup('file', '/home/byron/.ssh/mabbettbyron_rsa.pub') }}"
#        state: present
